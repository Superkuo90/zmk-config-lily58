/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3  &kp N4        &kp N5                                                   &kp N6           &kp N7         &kp N8     &kp N9   &kp N0     &kp GRAVE
&kp TAB    &kp Q   &kp W   &kp E   &kp R         &kp T                                                    &kp Y            &kp U          &kp I      &kp O    &kp P      &kp MINUS
&kp RCTRL  &kp A   &kp S   &kp D   &kp F         &kp G                                                    &kp H            &kp J          &kp K      &kp L    &kp SEMI   &kp SINGLE_QUOTE
&kp LSHFT  &kp Z   &kp X   &kp C   &kp V         &kp B             &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp N            &kp M          &kp COMMA  &kp DOT  &kp SLASH  &kp RETURN
                           &trans  &kp LEFT_ALT  &kp LEFT_COMMAND  &lt 1 SPACE         &lt 2 BACKSPACE    &kp RIGHT_SHIFT  &kp RIGHT_ALT  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans  &trans         &trans  &trans  &trans  &trans                                         &bt BT_SEL 0          &bt BT_SEL 1          &bt BT_SEL 2          &bt BT_SEL 3             &bt BT_SEL 4  &bt BT_CLR
&trans  &kp LG(LC(Q))  &kp F7  &kp F8  &kp F9  &kp F10                                        &trans                &kp LA(LG(LEFT))      &kp RC(UP_ARROW)      &kp RA(RG(RIGHT_ARROW))  &trans        &trans
&trans  &trans         &kp F4  &kp F5  &kp F6  &kp F11                                        &kp RG(TAB)           &kp LC(LEFT_ARROW)    &kp LC(DOWN_ARROW)    &kp LC(RIGHT_ARROW)      &trans        &trans
&trans  &trans         &kp F1  &kp F2  &kp F3  &kp F12  &kp C_VOLUME_DOWN    &kp C_VOLUME_UP  &kp LS(LG(NUMBER_4))  &kp LS(LG(NUMBER_3))  &kp LS(LG(NUMBER_5))  &trans                   &trans        &trans
                               &trans  &trans  &trans   &trans               &kp C_AC_SEARCH  &kp C_MUTE            &trans                &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp RG(LS(V))  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC       &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS  &kp C_AC_SEARCH        &kp C_VOICE_COMMAND                                                 &kp C_SLEEP  &trans          &trans          &trans           &trans         &trans
&trans         &kp HASH              &kp NUMBER_7               &kp NUMBER_8                       &kp NUMBER_9           &kp PERCENT                                                         &trans       &kp LG(C)       &kp UP_ARROW    &kp LG(V)        &kp LG(Z)      &trans
&kp LCTRL      &kp EXCLAMATION       &mt LEFT_COMMAND NUMBER_4  &mt LEFT_SHIFT NUMBER_5            &mt LEFT_ALT NUMBER_6  &kp QUESTION                                                        &trans       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans         &trans
&trans         &kp COLON             &kp NUMBER_1               &kp NUMBER_2                       &kp NUMBER_3           &kp EQUAL            &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &trans       &kp PLUS        &kp MINUS       &kp KP_MULTIPLY  &kp KP_DIVIDE  &kp RIGHT_SHIFT
                                                                &trans                             &trans                 &kp NUMBER_0         &kp LEFT_SHIFT          &trans                 &trans       &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
