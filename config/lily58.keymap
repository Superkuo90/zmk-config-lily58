/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Screenshot {
            bindings = <&kp LS(LG(NUMBER_4))>;
            key-positions = <37 38 37 38>;
            layers = <0>;
            timeout-ms = <50>;
        };

        Paste {
            bindings = <&kp K_PASTE>;
            key-positions = <41 40>;
            layers = <0>;
        };

        Copy {
            bindings = <&kp K_COPY>;
            key-positions = <38 39>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp LA(LC(F))     &kp LC(LA(E))  &kp LC(LA(V))  &kp LC(LA(I))  &kp LC(LA(O))  &kp LC(LA(D))                                       &kp LG(LS(E))    &none  &none      &none    &none          &none
&kp TAB           &kp Q          &kp W          &kp F          &kp P          &kp B                                               &kp J            &kp L  &kp U      &kp Y    &kp SEMICOLON  &kp SINGLE_QUOTE
&mo 3             &kp A          &kp R          &kp S          &kp T          &kp G                                               &kp M            &kp N  &kp E      &kp I    &kp O          &kp MINUS
&mt LSHFT ESCAPE  &kp Z          &kp X          &kp C          &kp D          &kp V             &kp LC(LA(O))    &kp LC(LA(O))    &kp K            &kp H  &kp COMMA  &kp DOT  &kp SLASH      &kp RETURN
                                                &none          &kp LEFT_ALT   &kp LEFT_COMMAND  &lt 1 SPACE      &lt 2 BACKSPACE  &sk RIGHT_SHIFT  &none  &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        navigation_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans          &kp F1         &kp F2     &kp F3         &kp F4                &kp F5                                                                  &kp F6                  &kp F7              &kp F8                   &kp F9               &kp F10  &kp F11
&trans          &kp LG(LC(Q))  &trans     &kp LG(MINUS)  &kp LG(PLUS)          &kp LG(LS(NUMBER_4))                                                    &kp C_PP                &kp RG(LEFT_ARROW)  &kp UP_ARROW             &kp RG(RIGHT_ARROW)  &none    &none
&trans          &trans         &trans     &trans         &mo 2                 &trans                                                                  &kp C_AC_SEARCH         &kp LA(LEFT_ARROW)  &kp DOWN_ARROW           &kp LA(RIGHT_ARROW)  &none    &kp MINUS
&kp LEFT_SHIFT  &kp LG(Z)      &kp LG(X)  &kp LG(C)      &kp LG(D)             &kp LG(V)              &mt LEFT_ALT C_VOLUME_DOWN    &kp C_VOLUME_UP    &kp C_VOLUME_DOWN       &kp C_VOLUME_UP     &kp C_MUTE               &trans               &trans   &kp LS(RETURN)
                                          &trans         &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &trans                        &kp LA(BACKSPACE)  &kp LG(LA(LEFT_ARROW))  &kp LG(LA(RIGHT))   &kp LG(LA(RIGHT_ARROW))
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        icon_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&none           &none                 &none                 &none        &none                  &none                                                                 &none             &trans              &trans          &trans               &trans     &none
&kp LS(LG(V))   &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp AT_SIGN  &kp AMPERSAND          &kp LC(UP_ARROW)                                                      &trans            &kp LC(LEFT_ARROW)  &kp UP_ARROW    &kp RC(RIGHT_ARROW)  &kp COLON  &kp DOUBLE_QUOTES
&trans          &trans                &kp COLON             &kp EQUAL    &kp RIGHT_PARENTHESIS  &kp QUESTION                                                          &kp LG(LA(M))     &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT_ARROW      &none      &none
&kp LEFT_SHIFT  &trans                &trans                &kp DOLLAR   &kp HASH               &kp EXCLAMATION        &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &none             &kp PLUS            &none           &none                &none      &kp RS(RETURN)
                                                            &trans       &kp LEFT_PARENTHESIS   &kp RIGHT_PARENTHESIS  &trans                  &trans                 &kp RA(UP_ARROW)  &kp RA(DOWN_ARROW)  &kp RA(RS(K))
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        number_layer {
            bindings = <
&bt BT_NXT      &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &bt BT_SEL 0                                &trans        &trans        &trans        &trans        &trans        &bt BT_CLR
&trans          &trans        &trans        &trans        &trans            &trans                                      &kp PERCENT   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp ASTERISK  &trans
&trans          &trans        &trans        &trans        &kp LEFT_BRACKET  &kp RIGHT_BRACKET                           &kp MINUS     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp COMMA     &kp NON_US_BACKSLASH
&kp LEFT_SHIFT  &trans        &trans        &trans        &trans            &trans             &trans    &kp EQUAL      &kp PLUS      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH     &trans
                                            &trans        &trans            &trans             &trans    &kp BACKSPACE  &kp NUMBER_0  &kp PERIOD    &trans
            >;
        };
    };
};
